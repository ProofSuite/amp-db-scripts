# This docker compose file starts processes on remote aws instances
# For this, docker needs to be in swarm mode with the following nodes
# - engine
# - rabbitmq
# - client
# - mongodb
# - ethereum
#  To work properly the ethereum node and other services might have
# to be removed and simply working with external services

version: '3.7'
services:
  # Currently the username and password need to be set manually after deployment with the following commands:
  # rabbitmqctl add_user ${username} ${password}
  # rabbitmqctl set_user_tags ${username} administrator
  # rabbitmqctl set_permissions ${username} ".*" ".*" ".*"
  rabbitmq:
    hostname: rabbitmq
    image: rabbitmq
    ports:
      - '5672:5672'
      - '5671:5671'
    networks:
      amp-prod-backend:
        aliases:
        - rabbitmq
    volumes:
      - "rabbitmq_logs:/var/log/rabbitmq"
      - "rabbitmq_data:/var/lib/rabbitmq"
    configs:
      - source: rabbitmq-ca-cert
        target: /etc/ssl/rabbitmq/ca_certificate.pem
      - source: rabbitmq-server-cert
        target: /etc/ssl/rabbitmq/server_certificate.pem
      - source: rabbitmq-server-key
        target: /etc/ssl/rabbitmq/server_key.pem
      - source: rabbitmq-config
        target: /etc/rabbitmq/rabbitmq.conf
    deploy:
      placement:
        constraints:
          - node.hostname == rabbitmq-prod
      restart_policy:
        condition: on-failure
        max_attempts: 3
        window: 120s

  matching-engine:
    hostname: matching-engine
    image: proofsuite/amp-matching-engine:latest
    ports:
      - '443:443'
      - '80:80'
    depends_on:
      - rabbitmq
      - mongodb
    volumes:
      - "matching-engine-certificates:/certs"
    environment:
      - AMP_ETHEREUM_NODE_HTTP_URL=https://mainnet.infura.io/${AMP_MAINNET_INFURA_KEY}
      - AMP_ETHEREUM_NODE_WS_URL=wss://mainnet.infura.io/ws/${AMP_MAINNET_INFURA_KEY}
      - AMP_MONGODB_URL=mongodb
      - AMP_MONGODB_DBNAME=proofdex
      - AMP_MONGODB_USERNAME=${AMP_PRODUCTION_MONGODB_USERNAME}
      - AMP_MONGODB_PASSWORD=${AMP_PRODUCTION_MONGODB_PASSWORD}
      - AMP_ENABLE_TLS=true
      - AMP_RABBITMQ_URL=rabbitmq
      - AMP_RABBITMQ_USERNAME=${AMP_PRODUCTION_RABBITMQ_USERNAME}
      - AMP_RABBITMQ_PASSWORD=${AMP_PRODUCTION_RABBITMQ_PASSWORD}
      - AMP_MONGODB_SHARD_URL_1=ampcluster0-shard-00-00-xzynf.mongodb.net:27017
      - AMP_MONGODB_SHARD_URL_2=ampcluster0-shard-00-01-xzynf.mongodb.net:27017
      - AMP_MONGODB_SHARD_URL_3=ampcluster0-shard-00-02-xzynf.mongodb.net:27017
      - AMP_MATCHING_ENGINE_CA_CERT=/etc/ssl/matching-engine/ca_certificate.pem
      - AMP_MATCHING_ENGINE_SERVER_CERT=/etc/ssl/matching-engine/server_certificate.pem
      - AMP_MATCHING_ENGINE_SERVER_KEY=/etc/ssl/matching-engine/server_key.pem
      - AMP_RABBITMQ_CLIENT_KEY=/etc/ssl/rabbitmq/client_key.pem
      - AMP_RABBITMQ_CLIENT_CERT=/etc/ssl/rabbitmq/client_certificate.pem
      - AMP_EXCHANGE_CONTRACT_ADDRESS=${AMP_MAINNET_EXCHANGE_CONTRACT_ADDRESS}
      - AMP_FEE_ACCOUNT_ADDRESS=${AMP_MAINNET_FEE_ACCOUNT_ADDRESS}
    configs:
      - source: matching-engine-ca-cert
        target: /etc/ssl/matching-engine/ca_certificate.pem
      - source: matching-engine-server-cert
        target: /etc/ssl/matching-engine/server_certificate.pem
      - source: matching-engine-server-key
        target: /etc/ssl/matching-engine/server_key.pem
      - source: rabbitmq-client-cert
        target: /etc/ssl/rabbitmq/client_certificate.pem
      - source: rabbitmq-client-key
        target: /etc/ssl/rabbitmq/client_key.pem

    networks:
      amp-prod-backend:
        aliases:
        - matching-engine
    deploy:
      placement:
        constraints:
          - node.hostname == matching-engine-prod
      restart_policy:
        condition: on-failure
        max_attempts: 3
        window: 120s

networks:
  amp-prod-backend:
    external: true

configs:
  matching-engine-ca-cert:
    name: matching-engine-ca-cert-${CONFIG_VERSION:-0}
    external: true
  matching-engine-server-cert:
    name: matching-engine-server-cert-${CONFIG_VERSION:-0}
    external: true
  matching-engine-server-key:
    name: matching-engine-server-key-${CONFIG_VERSION:-0}
    external: true
  rabbitmq-client-cert:
    name: rabbitmq-client-cert-${CONFIG_VERSION:-0}
    external: true
  rabbitmq-client-key:
    name: rabbitmq-client-key-${CONFIG_VERSION:-0}
    external: true
  rabbitmq-ca-cert:
    name: rabbitmq-ca-cert-${CONFIG_VERSION:-0}
    external: true
  rabbitmq-server-cert:
    name: rabbitmq-server-cert-${CONFIG_VERSION:-0}
    external: true
  rabbitmq-server-key:
    name: rabbitmq-server-key-${CONFIG_VERSION:-0}
    external: true
  rabbitmq-config:
    name: rabbitmq-config-${CONFIG_VERSION:-0}
    external: true
  nginx-config:
    name: nginx-config-${CONFIG_VERSION:-0}
    external: true

volumes:
  rabbitmq_logs:
  rabbitmq_data:
  matching-engine-certificates:
  client_certificates: