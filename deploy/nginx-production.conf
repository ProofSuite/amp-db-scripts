user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;

#   log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
#                     '$status $body_bytes_sent "$http_referer" '
#                     '"$http_user_agent" "$http_x_forwarded_for"';

  log_format main '[$time_local] $remote_addr - $remote_user - $server_name to: $upstream_addr: $request upstream_response_time $upstream_response_time msec $msec request_time $request_time';


  error_log /var/log/nginx/error.log debug; # todo testing remove me not for production use
  access_log  /var/log/nginx/access.log main;

  sendfile        on;
  keepalive_timeout  65;

#   gzip  on;


  server {
      listen 80;
      listen [::]:80 ssl;
      server_name amp.exchange;
      return 301 https://amp.exchange$request_uri;
  }

  server {
    listen 443 ssl;
    listen [::]:443 ssl;
    server_name amp.exchange;
    ssl_certificate /etc/letsencrypt/live/amp.exchange/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/amp.exchange/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/amp.exchange/fullchain.pem;
    # ssl_verify_client off;
    
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers HIGH:!aNULL:!MD5;

    # location ~* (serviceworker\.js)$ {
    #     add_header 'Cache-Control' 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
    #     expires off;
    #     proxy_no_cache 1;
    # }

    location ^~ /.well-known/ {
        #allow LE to validate the domain
        allow all;
        root /usr/share/nginx/html;
    }

    # # Do i need this ?
    root /usr/share/nginx/html;
    index index.html;
    
    location / {
        #security headers
        # add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload";
        # add_header X-XSS-Protection "1; mode=block" always;
        # add_header X-Content-Type-Options "nosniff" always;
        # add_header X-Frame-Options "DENY" always;
        # #CSP
        # add_header Content-Security-Policy "frame-src 'self'; default-src 'self'; script-src 'self' 'unsafe-inline' https://maxcdn.bootstrapcdn.com https://ajax.googleapis.com; img-src 'self'; style-src 'self' https://maxcdn.bootstrapcdn.com; font-src 'self' data: https://maxcdn.bootstrapcdn.com; form-action 'self'; upgrade-insecure-requests;" always;
        # add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        try_files $uri /index.html;
        # /engine/;
        # try_files $uri $uri/ /index.html;
    }

    location /socket {
        # rewrite /api/(.*) /$1  break;
        proxy_pass https://52.79.174.249:443;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    location ~ ^/api(/?)(.*) {
        # rewrite /api/(.*) /$1  break;
        proxy_pass https://52.79.174.249:443/$2$is_args$args;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        # proxy_redirect     off;
        # proxy_cache_bypass $http_upgrade;
    }

    location ~ ^/rates(/?)(.*) {
        resolver 8.8.8.8;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        proxy_pass https://min-api.cryptocompare.com/$2$is_args$args;
    }

    # Media: images, icons, video, audio, HTC
    location ~* \.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm|htc)$ {
        expires 1M;
        add_header Cache-Control "public";
    }

    # Javascript and CSS files
    location ~* \.(?:css|js)$ {
        try_files $uri =404;
        expires 1y;
        add_header Cache-Control "public";
    }

    # Any route containing a file extension (e.g. /devicesfile.js)
    location ~ ^.+\..+$ {
        try_files $uri =404;
    }
    }
}